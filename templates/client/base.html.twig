<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>{% block title %}Profil homeboard{% endblock %}</title>
    <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text><text y=%221.3em%22 x=%220.2em%22 font-size=%2276%22 fill=%22%23fff%22>sf</text></svg>">
    <link rel="stylesheet" href="{{ asset('css/main.css') }}">
</head>

<body class="body-homeboard">


{% include 'client/partials/_header.html.twig' with { 'currentRoute': app.request.attributes.get('_route') } %}

{% include 'client/partials/_sidebar.html.twig' with { 'currentRoute': app.request.attributes.get('_route') } %}


{% block main %}

{% endblock main %}
{% block javascripts %}
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const sectionContainer = document.querySelector("main section"); // Cible uniquement la première section
            const links = document.querySelectorAll("[data-link]");

            // Gestion de la navigation AJAX
            links.forEach(link => {
                link.addEventListener("click", event => {
                    event.preventDefault(); // Empêche le rechargement complet

                    fetch(link.href)
                        .then(response => response.text())
                        .then(html => {
                            const parser = new DOMParser();
                            const doc = parser.parseFromString(html, "text/html");
                            const newContent = doc.querySelector("main section")?.innerHTML;
                            if (newContent) {
                                sectionContainer.innerHTML = newContent; // ✅ Met à jour la section ciblée
                                history.pushState(null, "", link.href);
                            } else {
                                console.error("Erreur : Le contenu de la section n'a pas été trouvé.");
                            }
                        })
                        .catch(error => console.error("Erreur de chargement :", error));
                });
            });

            window.addEventListener("popstate", () => {
                location.reload();
            });

            // 🎯 Ajout de l'envoi AJAX du message sans rechargement
            const form = document.querySelector("form");
            if (form) {
                const messageInput = form.querySelector("textarea");
                const messagesContainer = document.querySelector(".homeboardInfo");

                form.addEventListener("submit", event => {
                    event.preventDefault(); // Empêche le rechargement

                    const formData = new FormData(form);

                    fetch(form.action, {
                        method: "POST",
                        body: formData
                    })
                        .then(response => response.text())
                        .then(data => {
                            messagesContainer.innerHTML += `
                        <div class="message sent">
                            <p>${messageInput.value}</p>
                            <small>À l’instant</small>
                        </div>`;

                            messageInput.value = ""; // Vide le champ après envoi
                        })
                        .catch(error => console.error("Erreur d'envoi du message :", error));
                });

                // 🛠️ Permet d'envoyer le message avec "Entrée"
                messageInput.addEventListener("keydown", event => {
                    if (event.key === "Enter" && !event.shiftKey) {
                        event.preventDefault(); // Empêche le retour à la ligne
                        form.dispatchEvent(new Event("submit")); // Déclenche l'envoi du formulaire
                    }
                });
            }
        });
    </script>
{% endblock javascripts %}
</body>
</html>

